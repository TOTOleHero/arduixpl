// xPL_Sensor_Dallas.h#ifndef _XPL_SENSORDALLAS_h#define _XPL_SENSORDALLAS_h#if defined(ARDUINO) && ARDUINO >= 100	#include "Arduino.h"#else	#include "WProgram.h"#endif#include "utility/OneWire.h"#include "utility/DallasTemperature.h"#include "../xPL_Sensor/xPL_Sensor.h"#include "../xPL/utility/VString.h"#ifndef ONE_WIRE_BUS#define ONE_WIRE_BUS 7#endifclass xPL_SensorDallasTemp:public xPL_SensorGeneric {static OneWire _oneWire;static DallasTemperature _sensors;DeviceAddress _addr;#define _wait 750#define _resolution 12unsigned long lastrequest;public:	virtual const __FlashStringHelper* className() const { return S(temp); }	virtual const __FlashStringHelper* units() const { return F("c"); }	xPL_SensorDallasTemp(DeviceAddress addr, const VString & name);	static void discoverOneWireTemp(xPL_Schema& schema,const VString& prefix);	virtual bool loop();};#endif